version: '3'
services:
  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: rabbitmq.dockerfile
    ports:
      - 15672:15672

  filter1.0.0:
    build:
      context: ./
      dockerfile: Filter/Filter.dockerfile
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_ID=1.0.0
      - EOF_TO_RECEIVE=1
      - NEXT_POOL_WORKERS=1
      - FORWARD_TO=1.1
      - SHARD_BY=
      - WORKER_FIELD=categories
      - WORKER_VALUE=Computers

  filter1.1.0:
    build:
      context: ./
      dockerfile: Filter/Filter.dockerfile
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_ID=1.1.0
      - EOF_TO_RECEIVE=1
      - NEXT_POOL_WORKERS=1
      - FORWARD_TO=1.2
      - SHARD_BY=
      - WORKER_FIELD=year
      - WORKER_VALUE=2000,2023

  filter1.2.0:
    build:
      context: ./
      dockerfile: Filter/Filter.dockerfile
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_ID=1.2.0
      - EOF_TO_RECEIVE=1
      - NEXT_POOL_WORKERS=1
      - FORWARD_TO=Gateway
      - SHARD_BY=
      - WORKER_FIELD=title
      - WORKER_VALUE=distributed

  gateway:
    build:
      context: ./
      dockerfile: Gateway/Gateway.dockerfile
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - PORT=12345
      - BOOK_QUERIES=1
      - REVIEW_QUERIES=
      - FORWARD_TO=1.0
      - SHARD_BY=
      - NEXT_POOL_WORKERS=1
      - EOF_TO_RECEIVE=1

  client0:
    build:
      context: ./
      dockerfile: Client/Client.dockerfile
    restart: on-failure
    environment:
      - PYTHONUNBUFFERED=1
      - BATCH_SIZE=25
      - QUERY_RESULTS_PATH=/data/
      - QUERIES=1
      - SERVER_PORT=12345
    volumes:
      - dataVolume:/data

  waker0:
    build:
      context: ./
      dockerfile: Waker/Waker.dockerfile
    environment:
      - WORKERS_CONTAINERS=filter1.0.0;filter1.1.0;filter1.2.0;gateway
      - WAKERS_CONTAINERS=waker1;waker2;waker3
      - WAKER_ID=0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  waker1:
    build:
      context: ./
      dockerfile: Waker/Waker.dockerfile
    environment:
      - WORKERS_CONTAINERS=filter1.0.0;filter1.1.0;filter1.2.0;gateway
      - WAKERS_CONTAINERS=waker0;waker2;waker3
      - WAKER_ID=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  waker2:
    build:
      context: ./
      dockerfile: Waker/Waker.dockerfile
    environment:
      - WORKERS_CONTAINERS=filter1.0.0;filter1.1.0;filter1.2.0;gateway
      - WAKERS_CONTAINERS=waker0;waker1;waker3
      - WAKER_ID=2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  waker3:
    build:
      context: ./
      dockerfile: Waker/Waker.dockerfile
    environment:
      - WORKERS_CONTAINERS=filter1.0.0;filter1.1.0;filter1.2.0;gateway
      - WAKERS_CONTAINERS=waker0;waker1;waker2
      - WAKER_ID=3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  killer:
    build:
      context: ./
      dockerfile: Killer/Killer.dockerfile
    environment:
      - KILL_DELAY_MIN=10
      - KILL_DELAY_MAX=15
      - CONTAINERS_TO_KILL_MIN=1
      - CONTAINERS_TO_KILL_MAX=2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  dataVolume:
    driver: local
    driver_opts:
      type: none
      device: ./data
      o: bind